<?php include("../common_header.php");?>
<title>Yong He - Projects</title>
<?php include('../body_head.php'); ?>
<!-- Content Start -->
<div id="guts">
<p class = "subtitle">Project - GxScript 3.0</p>
<p>This is an object-oriented and dynamic functional scripting language. A virtual machine is implemented to execute the intermediate instructions 
generated by the compiler. The scripting engine provides interfaces on both native C++ and .net managed environment for 
compiling and hosting scripts.The project also provided a convenient IDE (developed in C#) for coding and debugging. This version is evolved from
two prior experimental versions, each adds new language features.</p>
<p>Features of GxScript include:</p>
<ul>
<li>Dynamic type system</li>
<li>Higher order functions (closures)</li>
<li>Complete object oriented programming support</li>
<li>Properties</li>
<li>Multiple inheritance</li>
<li>Exceptions</li>
<li>Operator overloads</li>
<li>Constructor and destructor</li>
<li>Function overload</li>
<li>Cascaded class definition</li>
<li>Runtime code compilation and execution</li>
<li>Garbbage collection</li>
<li>Reflection</li>
<li>Dynamic changing class definitions</li>
<li>Interop with hosting application</li>
</ul>
<p>You can download the Windows binary package here [<a href="gxscript3_win32_bin.zip" target = "gxscriptpackage">gxscript3_win32_bin.zip</a>] (3.3 MB). 
While the core engine is written in C++,
the IDE of GxScript is written in C# and requires at least .Net Framework 3.5 to run. The package contains 
serveral example projects that may help you get started with GxScript.</p>
<p class = "subtitle2">Sample program 1: higher order functions </p>
<p class = "codeblock"><font color="#0000FF">var</font> array = [1,2,3,4,5];<br>
<font color="#0000FF">var</font> Applier =  <font color="#0000FF">function</font>(<font color="#0000FF">function</font> f, 
<font color="#0000FF">array</font> arr)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;<font color="#006600">// you can also use for each statement here.</font><br>
&nbsp;&nbsp;&nbsp;&nbsp;<font color="#0000FF">for</font> (i=0; i&lt;arr.Size; i++)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arr[i] = f(arr[i]);<br>
}<br>
Applier(<font color="#0000FF">function</font> (<font color="#0000FF">int</font> x) {<font color="#0000FF">return</font> x^2;}, array);<br>
writeln(array);
</p>
<p>Output:</p>
<p class = "codeblock">[1, 4, 9, 16, 25]</p>
<p class = "subtitle2">Sample program 2: dynamic classes</p>
<p class = "codeblock"><font color="#0000FF">class</font> Dynamic<br>
{<br>
<font color="#0000FF">public</font>:<br>
&nbsp;&nbsp;&nbsp;&nbsp;<font color="#0000FF">var</font> memberA;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<font color="#0000FF">constructor</font>()<br>
&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;memberA = 5;<br>
&nbsp;&nbsp;&nbsp;&nbsp;}<br>
}<br>
<font color="#0000FF">var</font> obj = <font color="#0000FF">new</font> Dynamic();<br>
writeln(obj.memberA, <font color="#990000">" "</font>,obj[<font color="#990000">"memberA"</font>]);<br>
writeln(obj.<font color="#0000FF">_prototype</font>.ClassName);<br>
obj.<font color="#0000FF">_prototype</font>.Members.Add(<font color="#990000">"memberB"</font>, 0);<br>
obj.memberB = 25;<br>
writeln(obj.memberB);<br>
</p>
<p>Output:</p><p class = "codeblock">5 5<br>Dynamic<br>25</p>
<center>
<img src = "images/gxscriptide.jpg" alt = "GxScript IDE screenshot"/>
<p class = "imageAnnotation">The GxScript IDE in debugging mode</p>
</center>
<p>GxScript provides a simple GUI library that can be used to build GUI applications. The following is a screenshot of a function graph renderer written in GxScript.<p>
<center>
<img src = "images/gxscriptfuncgraph.jpg" alt = "Function Graph Renderer screenshot"/>
<p class = "imageAnnotation">A function graph renderer written in GxScript</p>
</center>
</div>
<!-- Content End -->
<?php include('../body_tail.php'); ?>